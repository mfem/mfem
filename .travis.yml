language: cpp
compiler:
   - clang
   - gcc
os:
   - linux
   - osx
env:
   - DEBUG=YES MPI=YES 
   - DEBUG=NO MPI=YES
   - DEBUG=YES MPI=NO 
   - DEBUG=NO MPI=NO
matrix:
   exclude:
      - compiler: clang
        env: DEBUG=NO MPI=YES
      - compiler: clang
        env: DEBUG=YES MPI=YES
before_install:
   - sudo pip install codecov
install:
#    Back out of the mfem directory to install the libraries
   - pwd
   - cd ..
#    OpenMPI install
   - if test $TRAVIS_OS_NAME == "linux"; then sudo apt-get update; fi || true
   - if test $TRAVIS_OS_NAME == "linux"; then sudo apt-get install openmpi-bin openmpi-common openssh-client openssh-server libopenmpi1.3 libopenmpi-dbg libopenmpi-dev; else travis_wait brew install open-mpi; fi || true
#    Hypre install   
   - wget https://computation.llnl.gov/project/linear_solvers/download/hypre-2.10.0b.tar.gz --no-check-certificate
   - tar xvzf hypre-2.10.0b.tar.gz
   - cd hypre-2.10.0b/src
   - ./configure --disable-fortran CC=mpicc CXX=mpic++
   - make
   - cd ../..
#    Metis install   
   - wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/OLD/metis-4.0.3.tar.gz
   - tar xvzf metis-4.0.3.tar.gz
   - cd metis-4.0.3
   - make
   - cd ..
   - ln -s metis-4.0.3 metis-4.0
script:
#    Build MFEM, its examples and miniapps
   - cd $TRAVIS_BUILD_DIR
   - if test $MPI == "YES"; then export MYCXX=mpic++; else export MYCXX=$CXX; fi || true
   - make config MFEM_USE_MPI=$MPI MFEM_DEBUG=$DEBUG MFEM_CXX=$MYCXX
   - make
   - make all
#    Build and run the unit tests
   - cd unit-test.code
   - if test $MYCXX == "g++" -a $DEBUG == "YES"; then make MFEM_DIR=..; fi || true
   - if test $MYCXX == "g++" -a $DEBUG == "YES"; then ./test; fi || true
   - cd ..
#    Get the unit test coverage data
   - if test $MYCXX == "g++" -a $DEBUG == "YES" -a $TRAVIS_OS_NAME == "linux"; then make unittestcov; fi || true
   - if test $MYCXX == "g++" -a $DEBUG == "YES" -a $TRAVIS_OS_NAME == "linux"; then cd codecov; fi || true
   - if test $MYCXX == "g++" -a $DEBUG == "YES" -a $TRAVIS_OS_NAME == "linux"; then codecov; fi || true
#   - if test $MYCXX == "g++" -a $DEBUG == "YES" -a $TRAVIS_OS_NAME == "linux"; then bash <(curl -s https://codecov.io/bash); fi || true



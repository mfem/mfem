sudo: false

language: cpp

compiler:
   - gcc
   - clang

os:
   - linux
#   - osx

env:
   global:
      - TMPDIR=/tmp
   matrix:
      - DEBUG=YES
        MPI=YES
        NPROCS=4
        CODECOV=YES
        MFEM_TEST_TARGET=test
      - DEBUG=NO
        MPI=YES
        NPROCS=4
        CODECOV=NO
        MFEM_TEST_TARGET=test
#      - DEBUG=YES
#        MPI=NO
#        CODECOV=NO
#        MFEM_TEST_TARGET=check
#      - DEBUG=NO
#        MPI=NO
#        CODECOV=NO
#        MFEM_TEST_TARGET=check

addons:
   apt:
      sources:
         - ubuntu-toolchain-r-test
      packages:
         - g++-4.9
         - openmpi-bin
         - libopenmpi-dev;

# Test with GCC on Linux an Clang on Mac
matrix:
   exclude:
      - compiler: clang
        os: linux
      - compiler: gcc
        os: osx

before_install:
    # No addon for brew yet, have to install OSX packages this way.
   - if [ $TRAVIS_OS_NAME == "osx" ]; then
        travis_wait brew install open-mpi;
        rvm get stable;
     fi

   # Install tool to upload code coverage reports to coveralls.io
   - if [ "$CODECOV" == "YES" ]; then
        export PYTHONUSERBASE=$HOME/local;
        echo "Using PYTHONUSERBASE=$PYTHONUSERBASE";
        pip install --user cpp-coveralls;
        pip install --user pyyaml;
        PATH=$HOME/local/bin:$PATH;
     fi

   # Update environment to find g++ 4.9 installation first.
   - if [ $TRAVIS_OS_NAME == "linux" ]; then
         mkdir -p latest-gcc-symlinks;
         ln -s /usr/bin/g++-4.9 latest-gcc-symlinks/g++;
         ln -s /usr/bin/gcc-4.9 latest-gcc-symlinks/gcc;
         ln -s /usr/bin/gcov-4.9 latest-gcc-symlinks/gcov;
         export PATH=$PWD/latest-gcc-symlinks:$PATH;
     fi

install:
   # Back out of the mfem directory to install the libraries
   - cd ..

   # OpenMPI
#   - if [ $TRAVIS_OS_NAME == "linux" ]; then
#        sudo apt-get install openmpi-bin libopenmpi-dev;
#     else
#        travis_wait brew install open-mpi;
#     fi

   # hypre
   - if [ $MPI == "YES" ]; then
        if [ ! -d hypre-2.10.0b ]; then
            wget https://computation.llnl.gov/project/linear_solvers/download/hypre-2.10.0b.tar.gz --no-check-certificate;
            tar xvzf hypre-2.10.0b.tar.gz;
            cd hypre-2.10.0b/src;
            ./configure --disable-fortran --without-fei CC=mpicc CXX=mpic++;
            make -j 4;
            cd ../..;
        else
            echo "Reusing cached hypre-2.10.0b/";
        fi;
     else
        echo "Serial build, not using hypre";
     fi

   # METIS
   - if [ ! -d metis-4.0 ]; then
        wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/OLD/metis-4.0.3.tar.gz;
        tar xvzf metis-4.0.3.tar.gz;
        cd metis-4.0.3;
        make -j 4;
        cd ..;
        mv metis-4.0.3 metis-4.0;
     else
        echo "Reusing cached metis-4.0/";
     fi

# # Delete an expired cache here: https://travis-ci.org/mfem/mfem/caches
# cache:
#   directories:
#     - $TRAVIS_BUILD_DIR/../hypre-2.10.0b
#     - $TRAVIS_BUILD_DIR/../metis-4.0

script:
   # Compiler
   - if [ $MPI == "YES" ]; then
        export MYCXX=mpic++;
        export OMPI_CXX="$CXX";
        $MYCXX --showme:version;
     else
        export MYCXX="$CXX";
     fi
   # Print the compiler version
   - $MYCXX -v

   # Build and check/test MFEM, its examples and miniapps
   - cd $TRAVIS_BUILD_DIR &&
     CPPFLAGS="" &&
     SKIP_TEST_DIRS="" &&
     if [ "$CODECOV" == "YES" ]; then
        CPPFLAGS="--coverage";
        SKIP_TEST_DIRS="miniapps/performance";
     fi &&
     make config MFEM_USE_MPI=$MPI MFEM_DEBUG=$DEBUG MFEM_CXX="$MYCXX"
        MFEM_MPI_NP=$NPROCS CPPFLAGS="$CPPFLAGS" &&
     make info &&
     make all -j 4 &&
     make $MFEM_TEST_TARGET SKIP_TEST_DIRS="$SKIP_TEST_DIRS"

#      coveralls --include fem --include general --include linalg --include mesh --include miniapps --gcov-options '\-lp' --root $TRAVIS_BUILD_DIR --build-root $TRAVIS_BUILD_DIR;
after_success:
   - if [ "$CODECOV" == "YES" ]; then
        coveralls --include fem --include general --include linalg --include mesh --exclude /usr --gcov-options '\-lp' --root $TRAVIS_BUILD_DIR;
     fi;

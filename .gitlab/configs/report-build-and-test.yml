# Copyright (c) 2010-2023, Lawrence Livermore National Security, LLC. Produced
# at the Lawrence Livermore National Laboratory. All Rights reserved. See files
# LICENSE and NOTICE for details. LLNL-CODE-806117.
#
# This file is part of the MFEM library. For more information and source code
# availability visit https://mfem.org.
#
# MFEM is free software; you can redistribute it and/or modify it under the
# terms of the BSD-3 license. We welcome feedback and contributions, see file
# CONTRIBUTING.md for details.

# Jobs report
.report_job_success:
  script:
    - echo ${MACHINE_NAME}
    - echo ${AUTOTEST}
    - echo ${AUTOTEST_COMMIT}
    - echo "AUTOTEST_ROOT ${AUTOTEST_ROOT}"
    - cd ${AUTOTEST_ROOT}
    - |
      (
        date
        echo "Waiting to acquire lock on '$PWD/autotest.lock' ..."
        # try to get an exclusive lock on fd 9 (autotest.lock) repeating the try
        # every 5 seconds; we may want to add a counter for the number of
        # retries to interrupt a potential infinite loop
        while ! flock -n 9; do
          sleep 5
        done
        echo "Acquired lock on '$PWD/autotest.lock'"
        date
        # Report SUCCESS while holding the file lock on 'autotest.lock'.
        # The next script uses the following environment variables:
        # - MACHINE_NAME, AUTOTEST_ROOT, AUTOTEST_COMMIT
        # - CI_COMMIT_REF_SLUG, CI_PROJECT_DIR, CI_PIPELINE_URL
        # It also calls the script '.gitlab/scripts/safe_create_rundir'.
        ${CI_PROJECT_DIR}/.gitlab/scripts/report_build_and_test_success
        err=$?
        # sleep for a period to allow NFS to propagate the above changes;
        # clearly, there is no guarantee that other NFS clients will see the
        # changes even after the timeout
        sleep 10
        exit $err
      ) 9> autotest.lock

.report_job_failure:
  script:
    - echo ${MACHINE_NAME}
    - echo ${AUTOTEST}
    - echo ${AUTOTEST_COMMIT}
    - echo "AUTOTEST_ROOT ${AUTOTEST_ROOT}"
    - cd ${AUTOTEST_ROOT}
    - |
      (
        date
        echo "Waiting to acquire lock on '$PWD/autotest.lock' ..."
        # try to get an exclusive lock on fd 9 (autotest.lock) repeating the try
        # every 5 seconds; we may want to add a counter for the number of
        # retries to interrupt a potential infinite loop
        while ! flock -n 9; do
          sleep 5
        done
        echo "Acquired lock on '$PWD/autotest.lock'"
        date
        # Report FAILURE while holding the file lock on 'autotest.lock'.
        # The next script uses the following environment variables:
        # - MACHINE_NAME, AUTOTEST_ROOT, AUTOTEST_COMMIT
        # - CI_COMMIT_REF_SLUG, CI_PROJECT_DIR, CI_PIPELINE_URL
        # It also calls the script '.gitlab/scripts/safe_create_rundir'.
        ${CI_PROJECT_DIR}/.gitlab/scripts/report_build_and_test_failure
        err=$?
        # sleep for a period to allow NFS to propagate the above changes;
        # clearly, there is no guarantee that other NFS clients will see the
        # changes even after the timeout
        sleep 10
        exit $err
      ) 9> autotest.lock
